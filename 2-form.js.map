{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// LocalStorage has limited memory, If we write more than there is memory (more than 5 GB) -> truble\nfunction saveToLS(key, value) {\n    try {\n        localStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction loadFromLS(key, value) {\n    try {\n        return JSON.parse(localStorage.getItem(key));\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction cleanLS(key) {\n    try {\n        localStorage.removeItem(key);\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n\nconst feedbackFormKey = 'feedback-form-state';\nconst refs = {\n    feedbackForm: document.querySelector('.feedback-form'),\n}\nlet formData = {\n    email: \"\",\n    message: \"\",\n}\n\n// Check if an object with key 'feedback-form-state' exists in LocalStorage -> fill form fileds and save to formData variable if exists\nconst dataLS = loadFromLS(feedbackFormKey);\nif (dataLS) {\n    refs.feedbackForm.email.value = dataLS.email || \"\";\n    refs.feedbackForm.message.value = dataLS.message || \"\";\n    formData = { ...dataLS };\n}\n\n// Listen for input, save new user input to the LocalStorage\nrefs.feedbackForm.addEventListener('input', event => {\n    event.preventDefault();\n    formData = {\n        email: event.currentTarget.elements.email.value,\n        message: event.currentTarget.elements.message.value,\n    }\n    saveToLS(feedbackFormKey, formData);\n});\n\n// Listen Submit Event - in case that all fields are filled -> reset form, clean LocalStorge\nrefs.feedbackForm.addEventListener('submit', event => {\n    event.preventDefault();\n    if (event.target.elements.email.value === \"\" || event.target.elements.message.value === \"\") {\n        alert('Fill please all fields');\n    } else {\n        console.log(formData);\n        cleanLS(feedbackFormKey);\n        refs.feedbackForm.reset();\n    }\n});\n"],"names":["saveToLS","key","value","err","loadFromLS","cleanLS","feedbackFormKey","refs","formData","dataLS","event"],"mappings":"wFACA,SAASA,EAASC,EAAKC,EAAO,CAC1B,GAAI,CACA,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAK,CAAC,CAClD,OAAQC,EAAK,CACV,QAAQ,IAAIA,CAAG,CACvB,CACA,CAEA,SAASC,EAAWH,EAAKC,EAAO,CAC5B,GAAI,CACA,OAAO,KAAK,MAAM,aAAa,QAAQD,CAAG,CAAC,CAC9C,OAAQE,EAAK,CACV,QAAQ,IAAIA,CAAG,CACvB,CACA,CAEA,SAASE,EAAQJ,EAAK,CAClB,GAAI,CACA,aAAa,WAAWA,CAAG,CAC9B,OAAQE,EAAK,CACV,QAAQ,IAAIA,CAAG,CACvB,CACA,CAGA,MAAMG,EAAkB,sBAClBC,EAAO,CACT,aAAc,SAAS,cAAc,gBAAgB,CACzD,EACA,IAAIC,EAAW,CACX,MAAO,GACP,QAAS,EACb,EAGA,MAAMC,EAASL,EAAWE,CAAe,EACrCG,IACAF,EAAK,aAAa,MAAM,MAAQE,EAAO,OAAS,GAChDF,EAAK,aAAa,QAAQ,MAAQE,EAAO,SAAW,GACpDD,EAAW,CAAE,GAAGC,CAAQ,GAI5BF,EAAK,aAAa,iBAAiB,QAASG,GAAS,CACjDA,EAAM,eAAgB,EACtBF,EAAW,CACP,MAAOE,EAAM,cAAc,SAAS,MAAM,MAC1C,QAASA,EAAM,cAAc,SAAS,QAAQ,KACtD,EACIV,EAASM,EAAiBE,CAAQ,CACtC,CAAC,EAGDD,EAAK,aAAa,iBAAiB,SAAUG,GAAS,CAClDA,EAAM,eAAgB,EAClBA,EAAM,OAAO,SAAS,MAAM,QAAU,IAAMA,EAAM,OAAO,SAAS,QAAQ,QAAU,GACpF,MAAM,wBAAwB,GAE9B,QAAQ,IAAIF,CAAQ,EACpBH,EAAQC,CAAe,EACvBC,EAAK,aAAa,MAAO,EAEjC,CAAC"}